<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Style for ToggleButton in TreeViewItem -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Style.Resources>
            <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        </Style.Resources>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <Path x:Name="ExpandPath"
                                    HorizontalAlignment="Left" 
                                    VerticalAlignment="Center" 
                                    Margin="1,1,1,1"
                                    Fill="{StaticResource GlyphBrush}"
                                    Data="M 0 4 L 8 4 L 4 8 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 0 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
                             StrokeThickness="5"
                             Stroke="Black"
                             StrokeDashArray="1 2"
                             Opacity="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Style and Template for TreeViewItem -->
    <Style x:Key="TreeViewItemPlainStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel
                                VerticalAlignment="Top"
                                HorizontalAlignment="Stretch">
                        <ContentPresenter
                                    x:Name="PART_Header"
                                    ContentSource="Header"
                                    HorizontalAlignment="Stretch"/>
                        <ItemsPresenter
                                    Panel.ZIndex="100"
                                    HorizontalAlignment="Stretch"
                                    x:Name="ItemsHost"
                                    RenderTransformOrigin="0.5, 0.5" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InnerBorderFirstLevelStyle" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFE8E8E8" Offset="0"/>
                    <GradientStop Color="#FFB9B9B9" Offset="0.57"/>
                    <GradientStop Color="#FFE8E8E8" Offset="1"/>
                    <GradientStop Color="#FFD4D4D4" Offset="0.937"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0, 0, 0, 1" />
    </Style>
    <Style x:Key="InnerBorderSecondLevelStyle" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderBrush" Value="#EEEEEE" />
        <Setter Property="BorderThickness" Value="1, 0, 1, 1" />
        <Setter Property="Margin" Value="2, 0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#88F4EBB8" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplatedParent.IsSelected}" Value="True">
                <Setter Property="Background" Value="#FFF4EBB8" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>