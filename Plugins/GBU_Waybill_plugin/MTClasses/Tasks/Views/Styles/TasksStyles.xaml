<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
                    xmlns:Themes1="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <Style x:Key="TitleLabelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="FontSize"
                Value="18" />

        <Setter Property="FontWeight"
                Value="Medium" />

        <Setter Property="Foreground"
                Value="#0083ba" />
    </Style>

    <Style x:Key="NormalLabelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="FontSize"
                Value="14" />

        <Setter Property="FontWeight"
                Value="Medium" />

        <Setter Property="Foreground"
                Value="#000" />
    </Style>

    <Style x:Key="StatusLabelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="FontSize"
                Value="11" />

        <Setter Property="FontWeight"
                Value="Normal" />

        <Setter Property="Foreground"
                Value="#919191" />

        <Setter Property="VerticalContentAlignment"
                Value="Center" />

        <Setter Property="Padding"
                Value="0" />
    </Style>

    <!-- ComboBox Next Style-->
    <Style x:Key="ComboBoxToggleButton"
           TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="32" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="Border"
                                Grid.ColumnSpan="2"
                                CornerRadius="2.75"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1" />

                        <Border Grid.Column="0"
                                CornerRadius="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="10" />

                        <Path x:Name="Arrow"
                              Grid.Column="1"
                              Fill="{TemplateBinding Foreground}"
                              Stroke="{TemplateBinding Foreground}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 3.5 4 L 7 0 Z" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="White" />

                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="#e2e2e2" />

                            <Setter Property="Foreground"
                                    Value="Gray" />

                            <Setter TargetName="Arrow"
                                    Property="Fill"
                                    Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="TextBox">
        <Border x:Name="PART_ContentHost"
                Focusable="True" />
    </ControlTemplate>

    <Style x:Key="ComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />

        <Setter Property="HorizontalAlignment"
                Value="Stretch" />

        <Setter Property="VerticalAlignment"
                Value="Stretch" />

        <Setter Property="FontSize"
                Value="14" />

        <Setter Property="FontWeight"
                Value="Medium" />

        <Setter Property="OverridesDefaultStyle"
                Value="true" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border"
                            Padding="5"
                            Margin="1,3,1,1"
                            BorderThickness="1"
                            CornerRadius="2.75"
                            Background="Transparent"
                            BorderBrush="Transparent">
                        <TextBlock TextAlignment="Left">
                            <ContentPresenter />
                        </TextBlock>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="#e2e2e2" />

                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#c8deea" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxNextStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground"
                Value="Black" />

        <Setter Property="BorderBrush"
                Value="#e2e2e2" />

        <Setter Property="Background"
                Value="White" />

        <Setter Property="SnapsToDevicePixels"
                Value="true" />

        <Setter Property="OverridesDefaultStyle"
                Value="true" />

        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />

        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />

        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />

        <Setter Property="FontSize"
                Value="14" />

        <Setter Property="FontWeight"
                Value="Medium" />

        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource ComboBoxItemStyle}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Background="{TemplateBinding Background}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Style="{StaticResource ComboBoxToggleButton}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press" />

                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="10,3,30,3"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />

                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="False"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="1"
                                        BorderBrush="#e2e2e2" />

                                <ScrollViewer Margin="4,0,4,6"
                                              SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95" />
                        </Trigger>

                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>

                        <Trigger SourceName="Popup"
                                 Property="Popup.AllowsTransparency"
                                 Value="true">
                            <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="2.75" />

                            <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0,0,0,0" />
                        </Trigger>

                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="IsTabStop"
                                    Value="false" />

                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible" />

                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Style -->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>
    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>
    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>
    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>
    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>
    <Color x:Key="DefaultBorderBrushLightBrush">Green</Color>

    <ControlTemplate x:Key="ButtonSaveControlTemplate"
                     TargetType="{x:Type Button}">
        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border"
                CornerRadius="2"
                BorderThickness="1"
                Background="#FF0083BA"
                BorderBrush="{x:Null}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                    </VisualStateGroup.Transitions>

                    <VisualState x:Name="Normal" />

                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="#FF00B4FF" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>

                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="#FF4CCAFF" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>

                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="#FFA9C6D3" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <ContentPresenter Margin="2"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True" />
        </Border>
    </ControlTemplate>

    <!-- DataGrid Style -->
    <Style x:Key="DataGridColumnHeaderStyle"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="35" />
        <Setter Property="SeparatorBrush"
                Value="DarkRed" />
        <Setter Property="FontWeight"
                Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="columnHeaderBorder">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="#FF00B4FF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="columnHeaderBorder">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="#FF4CCAFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="columnHeaderBorder"
                                BorderThickness="0"
                                Padding="3,0,3,0"
                                Background="#0083ba">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="10,0,10,0" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontFamily"
                Value="/GBU_Waybill_plugin;component/Fonts/#Segoe UI" />
    </Style>

    <Style x:Key="DataGridRowStyle"
           TargetType="{x:Type DataGridRow}">
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Background="White">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter Grid.Row="1"
                                                      Grid.Column="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding 
                                                                                            AreRowDetailsFrozen,
                                                                                            ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
			                                                                                Converter={x:Static DataGrid.RowDetailsScrollingConverter},
			                                                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility,
                                                                        ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                                                        Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Normal_AlternatingRow">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="DGR_Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="DGR_Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="#c8deea" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="DGR_Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="#e2e9ed" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellStyle"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            SnapsToDevicePixels="True"
                            Height="30">

                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"
                                          Margin="10,0,0,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridStyle"
           TargetType="{x:Type DataGrid}">
        <Setter Property="Margin"
                Value="5,5" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserDeleteRows"
                Value="False" />
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="SelectionMode"
                Value="Extended" />
        <Setter Property="ColumnHeaderStyle"
                Value="{DynamicResource DataGridColumnHeaderStyle}" />
        <Setter Property="RowStyle"
                Value="{DynamicResource DataGridRowStyle}" />
        <Setter Property="CellStyle"
                Value="{DynamicResource DataGridCellStyle}" />
        <Setter Property="RowHeaderWidth"
                Value="0" />
        <Setter Property="GridLinesVisibility"
                Value="None" />
        <Setter Property="Background"
                Value="White" />
    </Style>

    <ControlTemplate x:Key="DateTimePickerTemplate"
                     TargetType="{x:Type xctk:DateTimePicker}">
        <Border>
            <Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border BorderThickness="1,1,0,1"
                            BorderBrush="#e2e2e2"
                            CornerRadius="2.75,0,0,2.75">
                        <xctk:ButtonSpinner x:Name="PART_Spinner"
                                            AllowSpin="{TemplateBinding AllowSpin}"
                                            BorderThickness="0"
                                            Background="{TemplateBinding Background}"
                                            IsTabStop="False"
                                            ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}"
                                            Style="{DynamicResource CustomButtonSpinnerStyle}">
                            <!--I removed setters of Background and Foreground properties here-->

                            <xctk:WatermarkTextBox x:Name="PART_TextBox"
                                                   AcceptsReturn="False"
                                                   BorderThickness="0"
                                                   FontWeight="{TemplateBinding FontWeight}"
                                                   FontStyle="{TemplateBinding FontStyle}"
                                                   FontStretch="{TemplateBinding FontStretch}"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   FontFamily="{TemplateBinding FontFamily}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                                   MinWidth="20"
                                                   Padding="0"
                                                   TextAlignment="{TemplateBinding TextAlignment}"
                                                   TextWrapping="NoWrap"
                                                   Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                   TabIndex="{TemplateBinding TabIndex}"
                                                   WatermarkTemplate="{TemplateBinding WatermarkTemplate}"
                                                   Watermark="{TemplateBinding Watermark}">
                                <xctk:WatermarkTextBox.Template>
                                    <ControlTemplate TargetType="{x:Type xctk:WatermarkTextBox}">
                                        <Grid>
                                            <Border x:Name="Border"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    CornerRadius="1" />
                                            <Border x:Name="MouseOverVisual"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="1"
                                                    Opacity="0">
                                                <Border.BorderBrush>
                                                    <LinearGradientBrush EndPoint="0,1"
                                                                         StartPoint="0,0">
                                                        <GradientStop Color="#FF5794BF"
                                                                      Offset="0.05" />
                                                        <GradientStop Color="#FFB7D5EA"
                                                                      Offset="0.07" />
                                                        <GradientStop Color="#FFC7E2F1"
                                                                      Offset="1" />
                                                    </LinearGradientBrush>
                                                </Border.BorderBrush>
                                            </Border>
                                            <Border x:Name="FocusVisual"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="1"
                                                    Opacity="0">
                                                <Border.BorderBrush>
                                                    <LinearGradientBrush EndPoint="0,1"
                                                                         StartPoint="0,0">
                                                        <GradientStop Color="#FF3D7BAD"
                                                                      Offset="0.05" />
                                                        <GradientStop Color="#FFA4C9E3"
                                                                      Offset="0.07" />
                                                        <GradientStop Color="#FFB7D9ED"
                                                                      Offset="1" />
                                                    </LinearGradientBrush>
                                                </Border.BorderBrush>
                                            </Border>
                                            <ScrollViewer x:Name="PART_ContentHost"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <ContentPresenter x:Name="PART_WatermarkHost"
                                                              ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                                              Content="{TemplateBinding Watermark}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              IsHitTestVisible="False"
                                                              Margin="{TemplateBinding Padding}"
                                                              Visibility="Collapsed"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsFocused"
                                                               Value="False" />
                                                    <Condition Property="Text"
                                                               Value="" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Visibility"
                                                        TargetName="PART_WatermarkHost"
                                                        Value="Visible" />
                                            </MultiTrigger>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Opacity"
                                                        TargetName="MouseOverVisual"
                                                        Value="1" />
                                            </Trigger>
                                            <Trigger Property="IsFocused"
                                                     Value="True">
                                                <Setter Property="Opacity"
                                                        TargetName="FocusVisual"
                                                        Value="1" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled"
                                                     Value="False">
                                                <Setter Property="BorderBrush"
                                                        TargetName="Border"
                                                        Value="#FFADB2B5" />
                                                <!--I changed Background setter value to White here-->
                                                <Setter Property="Background"
                                                        TargetName="Border"
                                                        Value="White" />
                                                <Setter Property="Foreground"
                                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </xctk:WatermarkTextBox.Template>
                            </xctk:WatermarkTextBox>

                        </xctk:ButtonSpinner>
                    </Border>
                    <ToggleButton x:Name="_calendarToggleButton"
                                  Background="White"
                                  Grid.Column="1"
                                  Focusable="False"
                                  IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.IsHitTestVisible>
                            <Binding Path="IsOpen"
                                     RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <xctk:InverseBoolConverter />
                                </Binding.Converter>
                            </Binding>
                        </ToggleButton.IsHitTestVisible>
                        <ToggleButton.IsEnabled>
                            <Binding Path="IsReadOnly"
                                     RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <xctk:InverseBoolConverter />
                                </Binding.Converter>
                            </Binding>
                        </ToggleButton.IsEnabled>
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Grid SnapsToDevicePixels="True">
                                                <xctk:ButtonChrome Background="white"
                                                                   x:Name="ToggleButtonChrome"
                                                                   CornerRadius="0,2.75,2.75,0"
                                                                   InnerCornerRadius="0,1.75,1.75,0"
                                                                   BorderThickness="0,1,1,1"
                                                                   BorderBrush="#e2e2e2"
                                                                   RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                                   RenderPressed="{TemplateBinding IsPressed}"
                                                                   RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:DateTimePicker}}}"
                                                                   RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:DateTimePicker}}}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                          HorizontalAlignment="Stretch"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                          VerticalAlignment="Stretch" />
                                                        <Grid x:Name="arrowGlyph"
                                                              Grid.Column="1"
                                                              IsHitTestVisible="False"
                                                              Margin="5">
                                                            <Path x:Name="Arrow"
                                                                  Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                                                                  Fill="Black"
                                                                  Height="4"
                                                                  Width="7" />
                                                        </Grid>
                                                    </Grid>
                                                </xctk:ButtonChrome>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled"
                                                         Value="False">
                                                    <Setter Property="Fill"
                                                            TargetName="Arrow"
                                                            Value="#FFAFAFAF" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </Grid>
                <Popup x:Name="PART_Popup"
                       IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}"
                       StaysOpen="False">
                    <Border BorderThickness="1"
                            Padding="3">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1"
                                                 StartPoint="0.5,0">
                                <GradientStop Color="#FFA3AEB9"
                                              Offset="0" />
                                <GradientStop Color="#FF8399A9"
                                              Offset="0.375" />
                                <GradientStop Color="#FF718597"
                                              Offset="0.375" />
                                <GradientStop Color="#FF617584"
                                              Offset="1" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0,1"
                                                 StartPoint="0,0">
                                <GradientStop Color="White"
                                              Offset="0" />
                                <GradientStop Color="#FFE8EBED"
                                              Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <StackPanel>
                            <Calendar x:Name="PART_Calendar"
                                      BorderThickness="0"
                                      DisplayDate="2014-05-14" />
                            <xctk:TimePicker x:Name="PART_TimeUpDown"
                                             Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                             ClipValueToMinMax="{Binding ClipValueToMinMax, RelativeSource={RelativeSource TemplatedParent}}"
                                             Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
                                             FormatString="{TemplateBinding TimeFormatString}"
                                             Format="{TemplateBinding TimeFormat}"
                                             Maximum="{Binding Maximum, RelativeSource={RelativeSource TemplatedParent}}"
                                             Minimum="{Binding Minimum, RelativeSource={RelativeSource TemplatedParent}}"
                                             Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                             WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}"
                                             Watermark="{TemplateBinding TimeWatermark}" />
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="CustomButtonSpinnerStyle"
           TargetType="{x:Type xctk:ButtonSpinner}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            Background="{x:Null}"
                            CornerRadius="0"
                            BorderThickness="0">
                        <Grid Margin="1,0,0,0"
                              Background="{x:Null}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    CornerRadius="0"
                                    BorderThickness="0">
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  Focusable="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Height="15.96" />
                            </Border>
                            <Grid Grid.Column="1"
                                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.Visibility>
                                    <TemplateBinding Property="ShowButtonSpinner">
                                        <TemplateBinding.Converter>
                                            <BooleanToVisibilityConverter />
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </Grid.Visibility>
                                <RepeatButton x:Name="PART_IncreaseButton"
                                              IsTabStop="{TemplateBinding IsTabStop}"
                                              Style="{DynamicResource {ComponentResourceKey ResourceId=SpinnerButtonStyleKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}">
                                    <RepeatButton.ContentTemplate>
                                        <DataTemplate>
                                            <Path Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z"
                                                  Focusable="False"
                                                  Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphNormalForegroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                                  HorizontalAlignment="Center"
                                                  Height="4"
                                                  SnapsToDevicePixels="True"
                                                  VerticalAlignment="Center"
                                                  Width="7" />
                                        </DataTemplate>
                                    </RepeatButton.ContentTemplate>
                                </RepeatButton>
                                <RepeatButton x:Name="PART_DecreaseButton"
                                              IsTabStop="{TemplateBinding IsTabStop}"
                                              Grid.Row="1"
                                              Style="{DynamicResource {ComponentResourceKey ResourceId=SpinnerButtonStyleKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}">
                                    <RepeatButton.ContentTemplate>
                                        <DataTemplate>
                                            <Path Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                                                  Focusable="False"
                                                  Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphNormalForegroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                                  HorizontalAlignment="Center"
                                                  Height="4"
                                                  SnapsToDevicePixels="True"
                                                  VerticalAlignment="Center"
                                                  Width="7" />
                                        </DataTemplate>
                                    </RepeatButton.ContentTemplate>
                                </RepeatButton>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{DynamicResource {ComponentResourceKey ResourceId=ControlDisabledBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 SourceName="PART_IncreaseButton"
                                 Value="False">
                            <Setter Property="ContentTemplate"
                                    TargetName="PART_IncreaseButton">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Path Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z"
                                              Focusable="False"
                                              Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphDisabledForegroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                              HorizontalAlignment="Center"
                                              Height="4"
                                              SnapsToDevicePixels="True"
                                              VerticalAlignment="Center"
                                              Width="7" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 SourceName="PART_DecreaseButton"
                                 Value="False">
                            <Setter Property="ContentTemplate"
                                    TargetName="PART_DecreaseButton">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Path Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                                              Focusable="False"
                                              Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphDisabledForegroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                              HorizontalAlignment="Center"
                                              Height="4"
                                              SnapsToDevicePixels="True"
                                              VerticalAlignment="Center"
                                              Width="7" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>